<?php
/*
Author:			This code was generated by DALGen version 1.1.0.0 available at https://github.com/H0r53/DALGen 
Date:			12/10/2017
Description:	Creates the DAL class for  OnlineCart table and respective stored procedures

*/



class OnlineCart
{

    // This is for local purposes only! In hosted environments the db_settings.php file should be outside of the webroot, such as: include("/outside-webroot/db_settings.php");
    protected static function getDbSettings()
    {
        return "DAL/db_localsettings.php";
    }

    /******************************************************************/
    // Properties
    /******************************************************************/

    protected $Subscription;
    protected $SubscriptionDescription;
    protected $ImgUrl;
    protected $Price;
    protected $StatusType;
    protected $CustomerName;
    protected $Quantity;
    protected $SubscriptionStartDate;
    protected $SubscriptionEndDate;


    /******************************************************************/
    // Constructors
    /******************************************************************/
    public function __construct()
    {
        $argv = func_get_args();
        switch (func_num_args()) {
            case 0:
                self::__constructBase();
                break;
            case 1:
                self::__constructPK($argv[0]);
                break;
            case 9:
                self::__constructFull($argv[0], $argv[1], $argv[2], $argv[3], $argv[4], $argv[5], $argv[6], $argv[7], $argv[8]);
        }
    }


    public function __constructBase()
    {
        $this->Subscription = "";
        $this->SubscriptionDescription = "";
        $this->ImgUrl = "";
        $this->Price = 0;
        $this->StatusType = "";
        $this->CustomerName = "";
        $this->Quantity = 0;
        $this->SubscriptionStartDate = "";
        $this->SubscriptionEndDate = "";
    }


    public function __constructPK($paramId)
    {
        $this->load($paramId);
    }


    public function __constructFull($paramSubscription, $paramSubscriptionDescription, $paramImgUrl, $paramPrice, $paramStatusType, $paramCustomerName, $paramQuantity, $paramSubscriptionStartDate, $paramSubscriptionEndDate)
    {
        $this->Subscription = $paramSubscription;
        $this->SubscriptionDescription = $paramSubscriptionDescription;
        $this->ImgUrl = $paramImgUrl;
        $this->Price = $paramPrice;
        $this->StatusType = $paramStatusType;
        $this->CustomerName = $paramCustomerName;
        $this->Quantity = $paramQuantity;
        $this->SubscriptionStartDate = $paramSubscriptionStartDate;
        $this->SubscriptionEndDate = $paramSubscriptionEndDate;
    }


    /******************************************************************/
    // Accessors / Mutators
    /******************************************************************/

    public function getSubscription()
    {
        return $this->Subscription;
    }

    public function setSubscription($value)
    {
        $this->Subscription = $value;
    }

    public function getSubscriptionDescription()
    {
        return $this->SubscriptionDescription;
    }

    public function setSubscriptionDescription($value)
    {
        $this->SubscriptionDescription = $value;
    }

    public function getImgUrl()
    {
        return $this->ImgUrl;
    }

    public function setImgUrl($value)
    {
        $this->ImgUrl = $value;
    }

    public function getPrice()
    {
        return $this->Price;
    }

    public function setPrice($value)
    {
        $this->Price = $value;
    }

    public function getStatusType()
    {
        return $this->StatusType;
    }

    public function setStatusType($value)
    {
        $this->StatusType = $value;
    }

    public function getCustomerName()
    {
        return $this->CustomerName;
    }

    public function setCustomerName($value)
    {
        $this->CustomerName = $value;
    }

    public function getQuantity()
    {
        return $this->Quantity;
    }

    public function setQuantity($value)
    {
        $this->Quantity = $value;
    }

    public function getSubscriptionStartDate()
    {
        return $this->SubscriptionStartDate;
    }

    public function setSubscriptionStartDate($value)
    {
        $this->SubscriptionStartDate = $value;
    }

    public function getSubscriptionEndDate()
    {
        return $this->SubscriptionEndDate;
    }

    public function setSubscriptionEndDate($value)
    {
        $this->SubscriptionEndDate = $value;
    }

    public static function loadbycartid($paramCartId) {
        include(self::getDbSettings());
        $conn = new mysqli($servername, $username, $password, $dbname);
        $stmt = $conn->prepare('CALL usp_cartitem_LoadOnlineCart(?)');
        $stmt->bind_param('i', $paramCartId);
        $stmt->execute();
        $result = $stmt->get_result();
        if (!$result) die($conn->error);
        if ($result->num_rows > 0) {
            $arr = array();
            while ($row = $result->fetch_assoc()) {
                $onlinecart = new OnlineCart($row['Subscription'],$row['SubscriptionDescription'],$row['ImgUrl'],$row['Price'],$row['StatusType'],$row['CustomerName'],$row['Quantity'],$row['SubscriptionStartDate'],$row['SubscriptionEndDate']);
                $arr[] = $onlinecart;
            }
            return $arr;
        }
        else {
            die("The query yielded zero results.No rows found.");
        }
    }
}

